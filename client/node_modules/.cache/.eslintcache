[{"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/index.js":"1","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/App.js":"2","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/reportWebVitals.js":"3","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/NavBar.jsx":"4","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatHome.jsx":"5","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Landing.jsx":"6","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Test.jsx":"7","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/QuickSearch.jsx":"8","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatPage.jsx":"9","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Login.jsx":"10","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/SearchResults.jsx":"11","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Chat.jsx":"12","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatBar.jsx":"13","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/Footer.jsx":"14","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatBody.jsx":"15","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatFooter.jsx":"16","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/PetsNearby.jsx":"17","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/PetSearchForm.jsx":"18","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ImageSlider.jsx":"19","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ImageSliderData.jsx":"20"},{"size":567,"mtime":1677002883304,"results":"21","hashOfConfig":"22"},{"size":1683,"mtime":1683221449692,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1675043600188,"results":"24","hashOfConfig":"22"},{"size":1108,"mtime":1683074122668,"results":"25","hashOfConfig":"22"},{"size":2560,"mtime":1676407355414,"results":"26","hashOfConfig":"22"},{"size":4530,"mtime":1683073342973,"results":"27","hashOfConfig":"22"},{"size":4,"mtime":1683220887399,"results":"28","hashOfConfig":"22"},{"size":7308,"mtime":1677212790638,"results":"29","hashOfConfig":"22"},{"size":1085,"mtime":1675391805897,"results":"30","hashOfConfig":"22"},{"size":3053,"mtime":1683068242515,"results":"31","hashOfConfig":"22"},{"size":9404,"mtime":1683245322375,"results":"32","hashOfConfig":"22"},{"size":2559,"mtime":1675352805000,"results":"33","hashOfConfig":"22"},{"size":636,"mtime":1675375376424,"results":"34","hashOfConfig":"22"},{"size":2909,"mtime":1677874823974,"results":"35","hashOfConfig":"22"},{"size":1750,"mtime":1683212615803,"results":"36","hashOfConfig":"22"},{"size":1238,"mtime":1675392644197,"results":"37","hashOfConfig":"22"},{"size":3092,"mtime":1683074025635,"results":"38","hashOfConfig":"22"},{"size":1520,"mtime":1683212827627,"results":"39","hashOfConfig":"22"},{"size":1856,"mtime":1675453062546,"results":"40","hashOfConfig":"22"},{"size":1632,"mtime":1675218089510,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"4a7b2n",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"45"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"45"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"45"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/index.js",[],[],[],"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/App.js",["115","116","117","118","119"],[],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.css';\nimport React, {useState, useEffect} from 'react';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom'\n// Components\nimport NavBar from './components/NavBar'\nimport ChatHome from './components/ChatHome'\nimport ChatPage from './components/ChatPage'\n// Views\nimport Chat from './views/Chat'\nimport Test from './views/Test'\nimport Landing from './views/Landing'\nimport Login from './views/Login'\nimport SearchResults from './views/SearchResults'\nimport QuickSearch from './views/QuickSearch'\n// bring in socket for clients\nimport io from 'socket.io-client'\n\n\n// CONNECT REACT APP TO SOCKET.IO SERVER\nconst socket = io.connect('http://localhost:8000')\n\n\nfunction App() {\n\n  const [token, setToken] = useState('')\n  const [quickSearch, setQuickSearch] = useState('')\n\n\n  return (\n    \n\n    <div className=\"App\">\n      <Routes>\n        <Route path = \"/\" element = { <Login socket = {socket} token = {setToken} />} />\n        {/* <Route path = \"/Landing\" element = { <Landing setQuickSearch = {setQuickSearch} quickSearch = {quickSearch} token = {token} />} /> */}\n        <Route path = \"/Landing\" element = { <Landing />} />\n        <Route path = \"/messenger\" element = { <Chat/>} />\n        <Route path = \"/:animal/:locale/:token\" element = { <SearchResults/> } />\n        <Route path = \"/ChatHomeOld\" element = { <ChatHome socket = {socket}/>} />\n        <Route path = \"/ChatPage\" element = { <ChatPage socket = {socket}/>} />\n        <Route path = '/:quickSearch' element = { <QuickSearch passToken = {token} quickSearch = {quickSearch}/>} />\n      </Routes>  \n    </div>  \n\n  );\n}\n\nexport default App;\n","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/reportWebVitals.js",[],[],"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/NavBar.jsx",["120","121","122","123"],[],"import { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport \"../styles/Navbar.css\"\n\n\nconst NavBar = (props) => {\n\n    const [show, setShow] = useState(false)\n\n    return (\n        <div className=\"\">\n            <div className=\"top-navbar-container\">\n                <div className=\"top-container-content\">\n                    <div> <Link to=\"/\"> Home</Link> | <Link to=\"/\" > Pets</Link> | <Link to=\"/\"> Shelters </Link> </div>\n                    <div > <Link to=\"/\">Learn</Link> how you can make a difference in your community </div>\n                </div>\n            </div>\n            <div className=\"bottom-navbar-container\">\n                <div className=\"bottom-container-content\"> FrndFndr </div>\n                <div className=\"mobile-navigation\">\n                    <ul className=\"hidden-links\">\n                        <li> Home</li>\n                        <li> Shelters</li>\n                        <li> Pets Near You</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatHome.jsx",["124"],[],"import React, {useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst ChatHome = ({socket}) => {\n    const navigate = useNavigate();\n    const [userName, setUserName] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(userName.length == 0){\n            localStorage.setItem('userName', 'Guest User');\n            socket.emit(\"newUser\", {userName, socketID : socket.id})\n            navigate('/main')\n        }\n        else{\n            localStorage.setItem('userName', userName);\n            socket.emit(\"newUser\", {userName, socketID : socket.id})\n            navigate('/main')\n        }\n    };\n\n    return (\n        \n        <div className = \"d-flex\">\n            <div className = \"col-8 loginPageLeft d-flex align-items-center\">\n                <div>\n                    <div className = \"d-block loginPageLeftBigText\">FrndFndr</div>\n                    <div className = \"d-flex justify-content-end\">\n                        <div className = \"d-block col-7 loginPageLeftSmallText\">Helping people connect with their future best friend</div>\n                    </div>\n                </div>\n            </div>\n            <div className = \"col-4 loginPageRight\">\n                <div className = \"login-form-container\">\n                    <div className = \"home__container\">\n                        <form onSubmit = {handleSubmit}>\n                            <h2 className = \"home__header\"> Login </h2>\n                            <label htmlFor =  \"username\">  </label>\n                            <input\n                                type = \"text\"\n                                minLength = {6}\n                                name = \"username\"\n                                id = \"username\"\n                                className = \"username__input form-control\"\n                                placeholder='Enter a user name...'\n                                value = {userName}\n                                onChange = {(event) => setUserName(event.target.value)}\n                                />\n                                <div className = \"login-buttons\">                                \n                                    <button className = \"btn signIn \">Sign in</button>\n                                    <button className = \"btn signIn\">Continue as guest</button>\n                                </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatHome;","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Landing.jsx",["125","126","127","128","129","130","131","132"],[],"import React from 'react'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n// style sheet\nimport '../styles/Landing.css'\n// components\nimport NavBar from '../components/NavBar'\nimport Footer from '../components/Footer'\nimport PetSearchForm from '../components/PetSearchForm'\n// images\nimport dog1 from '../images/dog.png'\nimport cat from '../images/cat.png'\nimport other from '../images/other.png'\nimport quickCat from '../images/quick-cat.jpg'\nimport quickDog from '../images/quick-dog.jpg'\nimport house from '../images/house.png'\nimport catIcon from \"../images/cat-icon-1.png\"\nimport dogIcon from \"../images/dog-icon-1.png\"\nimport mouseIcon from \"../images/mouse-icon-1.png\"\nimport axios from 'axios'\nimport PetsNearby from '../components/PetsNearby'\n\nconst Landing = (props) => {\n\n    const [cleanToken, setcleanToken] = useState('')\n\n    const navigate = useNavigate();\n\n    const setqQuickSearch = (event) => {\n        // props.setQuickSearch(event.target.getAttribute(\"data-custom\"))\n        // navigate(`/${event.target.getAttribute(\"data-custom\")}`)\n    } \n    \n    useEffect(() => {\n        // Getting token from local storage and slicing the double quotes from the start and end\n        let cleanToken = localStorage.getItem(\"API_TOKEN\").slice(1,-1)\n        setcleanToken(cleanToken);\n    }, [cleanToken])\n\n    return (\n        <div className='body-container'>\n            <NavBar/>\n            <div className='background-container'>\n                <PetSearchForm className = \"search-form\" token = {props.cleanToken}/>\n                <div className='center-header-container'>\n                    <h2 className='center-header'>Find Your Future Best Friend</h2>\n                    <p className='center-sub-header'>Easily search our database of shelters from all over the country </p>\n                </div>\n            </div>\n            {/* CONTAINER FOR ANIMAL QUICK SEARCH */}\n            <div className = 'card-container2'>\n                <div className = \"search-card\" onClick = {setqQuickSearch} data-custom = \"dog\">\n                    <img src = {dogIcon} alt = \"\" className='dog-search-card' data-custom = \"dog\"></img>\n                    <p className = \"search-card-text\" data-custom = \"dog\"> Dogs </p>\n                </div>\n                <div className = \"search-card\" onClick = {setqQuickSearch} data-custom = \"cat\">\n                    <img src = {catIcon} alt = \"\" className='dog-search-card' data-custom = \"cat\"></img>\n                    <p className = \"search-card-text\" data-custom = \"cat\"> Cats </p>\n                </div>\n                <div className = \"search-card\" onClick = {setqQuickSearch} data-custom = \"other\">\n                    <img src = {mouseIcon} alt = \"\" className='dog-search-card' data-custom = \"other\"></img>\n                    <p className = \"search-card-text\" data-custom = \"other\"> Other Animals </p>\n                </div>\n                <div className = \"search-card\" onClick = {setqQuickSearch} data-custom = \"other\">\n                    <img src = {house} alt = \"\" className='dog-search-card' data-custom = \"other\"></img>\n                    <p className = \"search-card-text\" data-custom = \"other\"> Shelters & Rescues </p>\n                </div>\n            </div>\n            {/* SMALL CONTAINER FOR ANIMAL QUICK SEARCH */}\n            <div className = \"card-container-small\" onClick = {setqQuickSearch} data-custom = \"other\">\n                <div className = \"search-card-quick\" data-custom = \"other\">\n                    <img src = \"\" alt = \"\" className='dog-search-card' data-custom = \"other\"></img>\n                    <p> Quick Search</p>\n                </div>\n            </div>\n            <div className='center-header-purple-container'>\n                <p className='center-header-purple'> Friends Ready For A New Home Nearby</p>\n            </div>\n            {/* CONTAINER FOR ALL THE NEARBY PET CARDS */}\n            <div className = 'nearby-container'>\n                <PetsNearby/>\n            </div>\n            {/* SMALL CONTAINER FOR ALL THE NEARBY PET CARDS */}\n            <div className = \"nearby-container-small\" onClick = {setqQuickSearch} data-custom = \"other\">\n                <div className = \"search-card-quick\" data-custom = \"other\">\n                    <img src = \"\" alt = \"\" className='dog-search-card' data-custom = \"other\"></img>\n                    <p> Quick Search</p>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default Landing","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Test.jsx",[],[],"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/QuickSearch.jsx",["133","134","135","136","137","138","139","140","141"],[],"import axios from 'axios'\nimport { useEffect, useState, Link } from 'react';\nimport { Navigate, useNavigate, useParams } from 'react-router-dom'\nimport Popup from 'reactjs-popup'\nimport 'reactjs-popup/dist/index.css'\nimport DogIcon from '../images/dogIcon.png'\nimport NavBar from '../components/NavBar'\n\n\nconst QuickSearch = ({props}) => {\n\n    useEffect(() => {\n        console.log(props)\n    }, [])\n\n    const [results, setResults] = useState([]);\n    const { animal, locale, token } = useParams();\n    const navigate = useNavigate()\n\n\n    useEffect(() => {\n        // NEED TO FIX API CALL TO ADJUST TO REQ PARAMS!\n        axios.get('https://api.petfinder.com/v2/animals', {\n            params: {\n                'type': animal,\n                'location': 'Chicago, IL',\n                'distance': '40'\n            },\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n            .then((response) => {\n                console.log(response.data.animals)\n                setResults(response.data.animals)\n            })\n            .catch((error) => {\n                console.log(error)\n                console.log(props.token, animal)\n                // console.log(error.response.data['invalid-params'])\n            })\n    }, [])\n\n    const moreDetails = (animal) => {\n        console.log(animal)\n    }\n\n    const goToChat = () => {\n        navigate('/ChatPage')\n    }\n\n    return (\n        <div className=\"main-container\">\n            <NavBar />\n            <div className=\"w-100 d-flex justify-content-around flex-wrap\">\n                {\n                    results.map((animal, index) => {\n\n                        return (\n                            <div key={index} >\n                                <div className=\"d-flex p-2 resultCard\">\n                                    <div className=\"card shadow rounded\" style={{ width: \"19rem\" }}>\n                                        {animal.primary_photo_cropped == null\n                                            ?\n                                            <img className=\"card-img-top rounded card-image\" onClick={() => moreDetails(animal)} src={DogIcon} alt=\"Card image cap\" />\n\n                                            :\n                                            <img className=\"card-img-top rounded card-image shadow\" onClick={() => moreDetails(animal)} src={animal.primary_photo_cropped.large} alt=\"Card image cap\" />\n                                        }\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title dog-name\">{animal.name}</h5>\n                                            <div className=\"card-text dog-details\">{animal.age} | {animal.gender.toLowerCase()} | {animal.breeds.primary}</div>\n                                            <div className=\"d-flex justify-content-center\">\n                                                <Popup trigger={<button className=\"btn btn-success button-text\"> See more! </button>}\n                                                    modal\n                                                    nested\n                                                >\n                                                    <div className=\"\">\n                                                        <h3 className=\"text-center\">{animal.name}</h3>\n                                                        <div className='d-flex justify-content-center'>\n                                                            {animal.primary_photo_cropped == null\n                                                                ?\n                                                                <img className=\"card-img-top rounded card-image\" onClick={() => moreDetails(animal)} src={DogIcon} alt=\"Card image cap\" />\n                                                                :\n                                                                <img className=\"detailPhoto rounded shadow p-2\" src={animal.primary_photo_cropped.medium} alt=\"detailPhoto\" />\n                                                            }\n                                                        </div>\n                                                        <ul className='button-text mx-2 mt-2'>\n                                                            <li>Age: {animal.age}</li>\n                                                            <li>Gender: {animal.gender}</li>\n                                                            <li>Breed(s): {animal.breeds.primary ? animal.breeds.primary : \"n/a\"}  {animal.breeds.secondary ? `/ ${animal.breeds.secondary}` : \"\"}</li>\n                                                            {animal.tags.length != 0 &&\n                                                                <li>\n                                                                    {animal.name} {animal.tags.map((tag, index) => {\n                                                                        return (\n                                                                            <div className=\"w-100 d-flex justify-content-between\">\n                                                                                <div key={index} className=\"d-inline-block\"> {tag} </div>\n                                                                            </div>\n                                                                        )\n                                                                    })}\n                                                                </li>\n                                                            }\n                                                            <li>Contact Information for {animal.name}:\n                                                                <ul>\n                                                                    <li>Email: {animal.contact.email ? animal.contact.email : \"n/a\"} </li>\n                                                                    <li>Phone: {animal.contact.phone ? `${animal.contact.phone}` : \"n/a\"}</li>\n                                                                </ul>\n                                                            </li>\n                                                        </ul>\n                                                        <div className='d-flex justify-content-center'>\n                                                            <button className=\"btn btn-primary btn-sm button-text\" onClick={goToChat}>  Interested in adopting {animal.name}? </button>\n                                                        </div>\n                                                    </div>\n                                                </Popup>\n                                                {/* <button className=\"btn btn-primary btn-sm button-text\" onClick = {goToChat}> Interested in adopting {animal.name}? </button> */}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default QuickSearch","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatPage.jsx",["142"],[],"import React from 'react'\nimport { useEffect, useState, useRef } from 'react'\nimport ChatBar from './ChatBar'\nimport ChatBody from \"./ChatBody\"\nimport ChatFooter from \"./ChatFooter\"\n\nconst ChatPage = ({ socket }) => {\n\n    const [messages, setMessage] = useState([])\n    const [typingStatus, setTypingStatus] = useState('')\n    const lastMessageRef = useRef(null)\n\n    useEffect(() => {\n        socket.on('messageResponse', data => setMessage([...messages, data]))\n    }, [socket, messages]);\n\n    useEffect(() => {\n        socket.on(\"typingResponse\", data => setTypingStatus(data))\n    }, [socket])\n\n    useEffect(() => {\n        lastMessageRef.current?.scrollIntoView({behavior:'smooth'})\n    }, [messages])\n\n    return (\n        <div className = \"chat\">\n            {/* <ChatBar socket = {socket}/> */}\n            <div className = \"chat__main\">\n                <ChatBody messages = {messages} typingStatus = {typingStatus} lastMessageRef = {lastMessageRef}/>\n                <ChatFooter socket = {socket}/>\n            </div>\n        </div>\n        )\n    }\n\nexport default ChatPage","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Login.jsx",["143","144"],[],"import '../styles/Test.css';\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'\n\n\nconst Login = ({socket, token}) => {\n    \n    const navigate = useNavigate();\n    const [userName, setUserName] = useState('');\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(userName.length == 0){\n            localStorage.setItem('userName', 'Guest User');\n            socket.emit(\"newUser\", {userName, socketID : socket.id})\n            navigate('/landing')\n        }\n        else{\n            localStorage.setItem('userName', userName);\n            socket.emit(\"newUser\", {userName, socketID : socket.id})\n            navigate('/landing')\n        }\n    };\n\n    useEffect(() => {\n        axios.post(\n            'https://api.petfinder.com/v2/oauth2/token',\n            'grant_type=client_credentials&client_id=DQIKDmlCEqJgxmbVSeV9fjI3Lqja57S6014rEAkXcSNgZ7m2Ia&client_secret=yfqEgOtfa30PDQo3t16DdpgULiyCF0PoGxnAgvxY',\n            {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                }\n            }\n        )\n        .then((response) => {\n            token(response.data.access_token)\n            window.localStorage.setItem(\"API_TOKEN\", JSON.stringify(response.data.access_token))\n        })\n        .catch((error) => {console.log(error)})\n    }, [])\n\n\n\n    return (\n        <div className = \"main-login-container\">\n            <div className = \"left-login-container\" >\n                <div className = \"left-text-main-container\">\n                    <div className = \"main-logo-text\" > FrndFndr</div>\n                    <div className = \"sub-logo-text\" > Connecting people with their future best friend </div>\n                </div>\n            </div>\n            <div className = \"right-login-container\">\n                <div className = \"login-continater\" >\n                    <form className = \"login-card \" onSubmit = {handleSubmit}>\n                        <div className = \"login-card-title\" > Login</div>\n                        <div className = \"login-card-input-container\" >\n                            <input \n                            className = \"form-control\" \n                            placeholder = \"Username...\" \n                            type = \"text\"\n                            minLength = {6}\n                            name = \"userName\"\n                            id = \"userName\"\n                            value = {userName}\n                            onChange = {(event) => setUserName(event.target.value)}\n                            />\n                            <div className = \"login-card-buttons\" > \n                                <button className = \"sign-in-btn\" >Sign-in</button>\n                                <button className = \"sign-in-btn\" >Continue as guest</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n} \n\nexport default Login","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/SearchResults.jsx",["145","146","147","148","149","150","151","152","153","154"],[],"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Chat.jsx",["155","156","157","158"],[],"import React, {useState, useEffect} from 'react';\nimport io from 'socket.io-client'\nimport NavBar from '../components/NavBar';\nconst socket = io.connect(\"http://localhost:8000\")\n\nconst Chat = () => {\n\n    // ========================== States ========================== //\n    // Room state\n    const [room, setRoom] = useState('')\n    // Message States\n    const [message, setMessage] = useState('')\n    const [messageReceived, setMessageReceived] = useState([])\n    const [allMessages, setAllMessages] = useState([])\n    const [socketId, setSocketId] = useState('')\n\n    // ========================== Listeners/Emiters ========================== //\n\n    // Join a room method using data (emiter)\n    const joinRoom = () => {\n        if (room !== \"\") {\n            socket.emit(\"join_room\", room);\n        }\n    };\n\n    // Send message (emiter)\n    const sendMessage = () => {\n        socket.emit(\"send_message\", { message, room })\n    };\n\n    // When socket is updated, listen for data emitted from the backend (listener)\n    useEffect(() => {\n        console.log(\"UseEffect\")\n        socket.on(\"receive_message\", (data) => {\n            if (!socketId) {\n                setSocketId(data.socketId)\n            }\n            setMessageReceived(data);\n            setAllMessages(messageReceived => {\n                return [...messageReceived, data]\n            })\n        });\n    }, [socket]);\n\n    return (\n        <div>\n            <div>\n                <input placeholder='Room Number' onChange={(event) => { setRoom(event.target.value) }} />\n                <button onClick={joinRoom}> Join Room </button>\n            </div>\n            <div>\n                <input onChange={(event) => setMessage(event.target.value)} placeholder=\"message...\" />\n                <button onClick={() => { sendMessage() }}>Send Message</button>\n            </div>\n            <div style={{ overflow: \"scroll\", width: \"50%\", height: \"250px\", backgroundColor: \"rgba(0,0,255,.1)\" }}>\n                {allMessages.map((index, i) => {\n                    return (\n                        <div>\n                            {index.socketId == socketId\n                                ?\n                                <h5 key={i} > right: {index.message} {index.timeStamp} </h5>\n                                :\n                                <h5 key={i} > left: {index.message} <h6> {index.timeStamp} </h6> </h5>\n                            }\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Chat","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatBar.jsx",["159","160","161"],[],"import React, { useEffect, useState } from 'react';\n\nconst ChatBar = ({socket}) => {\n\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        socket.on(\"newUserResponse\", data => setUsers=(data))\n    }, [socket, users])\n\n    return (\n        <div className = \"chat__sidebar\">\n            <h2>Open chat</h2>\n            <div>\n                <h4 className = \"chat__header\" > ACTIVE USERS</h4>\n                <div className = \"chat__users\">\n                    {users.map(user => <p key = {user.socketid}> {user.userName} </p>)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatBar;","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/Footer.jsx",["162","163"],[],"import { Link } from 'react-router-dom'\nimport '../styles/Footer.css'\nimport logo from '../images/logo.svg'\nimport logoD8D8E7 from '../images/logo-D8D8E7.svg'\n\nconst Footer = () => {\n    return (\n        <div className = \"body\">\n            <div className = \"top-container\">\n                <div className = \"top-sub-contianer\">\n                    {/* <img src = {logoD8D8E7} alt=\"logo\" className = \"logo\"></img> */}\n                    <h5 className = \"slogan\">Your Friend, Our Passion</h5>\n                </div>\n            </div>\n\n            {/* bottom container has 3 sub-containers/columns */}\n            <div className = \"main-footer-container\">\n                <h6 className = 'main-footer-container-logo'>FrndFndr</h6>\n                <div className = \"main-container\">\n                    {/* left sub-container */}\n                    <div className =\"main-sub-container\">\n                        <ul className='link-list'>\n                            <li className = \"footer-li\"><Link to =\"/\" className= 'link'>ABOUT FRNDFNDR</Link></li>\n                            <li className = \"footer-li\"><Link to =\"/\" className= 'link'>FRIEND ADOPTION</Link></li>\n                            <li className = \"footer-li\"><Link to =\"/\" className= 'link'>PET CARE MATERIAL</Link></li>\n                            <li className = \"footer-li\"><Link to =\"/\" className= 'link'>SITEMAP</Link></li>\n                        </ul>\n                    </div>\n                    {/* min sub-container */}\n                    <div className =\"main-sub-container\">\n                    <ul className='link-list'>\n                            <li className = \"footer-li\"><Link to =\"/\" className= 'link'> PRIVACY POLICY</Link></li>\n                            <li className = \"footer-li\"><Link to =\"/\" className= 'link'> ABOUT OUR ADS</Link></li>\n                            <li className = \"footer-li\"><Link to =\"/\" className= 'link'> ABOUT OUR PARTNERS</Link></li>\n                        </ul>\n                    </div>\n                    {/* right sub-container */}\n                    <div className =\"main-sub-container\">\n                        <p className = \"sign-up-text\">Want to be the first to hear about our latest events and info? Register here!</p>\n                        <button className = \"sign-up-button\"> SIGN UP</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className='bottom-container'>\n                <p className = \"trademark\">@2023 FRNDFNDR</p>\n                <p className = \"footer-notes\">All content here is for demostrative purposes and in no way does the author claim ownership.  I hope you enjoy the demo and if you have any comments/questions/concerns, please reach out to me at...</p>\n                <p className = \"footer-icon\"> icons created by Freepik - Flaticon</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatBody.jsx",[],[],"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatFooter.jsx",[],[],"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/PetsNearby.jsx",["164","165","166","167","168"],[],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport \"../styles/PetsNearby.css\"\n\nconst PetsNearby = (props) => {\n\n    const [nearbyAnimals, setNearbyAnimals] = useState([])\n    const [animalArrayLength, setAnimalArrayLength] = useState([])\n\n    useEffect(() => {\n        let cleanToken = localStorage.getItem(\"API_TOKEN\").slice(1, -1)\n        axios.get('https://api.petfinder.com/v2/animals', {\n            params: {\n                'type': 'dog',\n                'location': 'Chicago, IL'\n            },\n            headers: {\n                'Authorization': `Bearer ${cleanToken}`\n            }\n        })\n            .then((response) => {\n                // Setting nearbyAnimals to an Array of animals returned from get request\n                console.log(response.data.animals)\n                // Filter out all animals that don't have pictures\n                let filteredNearbyAnimals = response.data.animals.filter(animal => animal.primary_photo_cropped != null)\n                setNearbyAnimals(filteredNearbyAnimals)\n                let length = filteredNearbyAnimals.length\n                setAnimalArrayLength(length)\n            })\n            .catch((error) => {\n                console.log(error)\n                // console.log(error.response.data['invalid-params'])\n            })\n    }, [])\n\n    let scroller = (event) => {\n        if(event.target.id == \"first\"){\n            document.getElementById(0).scrollIntoView({ behavior: 'smooth' });\n        }\n        if(event.target.id == \"middle\"){\n            document.getElementById(`${ Math.floor(animalArrayLength/2)}`).scrollIntoView({ behavior: 'smooth' });\n        }\n        if(event.target.id == \"last\"){\n            console.log('last')\n            document.getElementById(`${ animalArrayLength - 1}`).scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    return (\n    <div>\n        <div className='nearbyAnimals-container snaps-inline'>\n            {\n                nearbyAnimals.map((animal, index) => {\n                    return (\n                        // Each individual animal card\n                        // Prevent animals without valid information from showing\n                        <div className='nearbyAnimals-card ' key = {index}>\n                            <img src = {animal.primary_photo_cropped.medium} alt = \"nearbyPet photo\" className='nearbyAnimals-card-img'></img>\n                            <p className='nearbyAnimals-card-text' >{animal.name}</p>\n                        </div>\n                    )\n                })\n            }\n        </div>\n        <div className=\"nearbyAnimals-scroller-container\">\n            {/* <p><i class=\"arrow\"></i></p> */}\n            {/* <button onClick = {scroller} className='nearbyAnimals-forward-scroll' id = \"first\"> First </button>\n            <button onClick={scroller} className='nearbyAnimals-forward-scroll' id = \"middle\"> Middle </button>\n            <button onClick={scroller} className='nearbyAnimals-forward-scroll' id = \"last\"> End </button> */}\n        </div>\n    </div>\n    )\n}\nexport default PetsNearby;\n\n","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/PetSearchForm.jsx",["169","170","171","172","173","174","175","176","177"],[],"import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport magIcon from \"../images/mag-icon.svg\"\n\n\n\nconst PetSearchForm = (props) => {\n\n    const [animal, setAnimal] = useState('')\n    const [locale, setlocale] = useState('')\n    const [token, setToken] = useState('')\n\n    const [distance, setdistance] = useState('')\n    const [searchErrors, setSearcErrors] = useState('')\n    \n    const navigate = useNavigate()\n    // setQuickSearch = {setQuickSearch} quickSearch = {quickSearch} token = {token}\n\n    const makeRequest = (event) => {\n        let cleanToken = localStorage.getItem(\"API_TOKEN\").slice(1, -1)\n        navigate(`/${animal}/${locale}/${cleanToken}`)\n    }\n\n    return (\n        <div className='form-container'>\n                <div className = \"input-group search-form\">\n                    <input \n                    onChange = {(event) => {setAnimal(event.target.value)}}\n                    type=\"text\" placeholder=\"Dog, Cat, Rabbit...\" className=\"form-control\"\n                    />\n                    <input \n                    onChange = {(event) => {setlocale(event.target.value)}}\n                    type=\"text\" placeholder=\"City, State | Chicao, IL\" className=\"form-control\"\n                    />\n                    <span className =\"input-group-text\" onClick = {makeRequest}><img className='mag-icon' src = {magIcon} alt = \"\" ></img></span>\n                </div>\n        </div>\n    )\n}\nexport default PetSearchForm","/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ImageSlider.jsx",["178","179"],[],"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ImageSliderData.jsx",[],[],{"ruleId":"180","severity":1,"message":"181","line":3,"column":26,"nodeType":"182","messageId":"183","endLine":3,"endColumn":35},{"ruleId":"180","severity":1,"message":"184","line":4,"column":9,"nodeType":"182","messageId":"183","endLine":4,"endColumn":22},{"ruleId":"180","severity":1,"message":"185","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":14},{"ruleId":"180","severity":1,"message":"186","line":11,"column":8,"nodeType":"182","messageId":"183","endLine":11,"endColumn":12},{"ruleId":"180","severity":1,"message":"187","line":27,"column":23,"nodeType":"182","messageId":"183","endLine":27,"endColumn":37},{"ruleId":"180","severity":1,"message":"181","line":2,"column":20,"nodeType":"182","messageId":"183","endLine":2,"endColumn":29},{"ruleId":"180","severity":1,"message":"188","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":13},{"ruleId":"180","severity":1,"message":"189","line":9,"column":12,"nodeType":"182","messageId":"183","endLine":9,"endColumn":16},{"ruleId":"180","severity":1,"message":"190","line":9,"column":18,"nodeType":"182","messageId":"183","endLine":9,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":10,"column":28,"nodeType":"193","messageId":"194","endLine":10,"endColumn":30},{"ruleId":"180","severity":1,"message":"195","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":18},{"ruleId":"180","severity":1,"message":"196","line":11,"column":8,"nodeType":"182","messageId":"183","endLine":11,"endColumn":12},{"ruleId":"180","severity":1,"message":"197","line":12,"column":8,"nodeType":"182","messageId":"183","endLine":12,"endColumn":11},{"ruleId":"180","severity":1,"message":"198","line":13,"column":8,"nodeType":"182","messageId":"183","endLine":13,"endColumn":13},{"ruleId":"180","severity":1,"message":"199","line":14,"column":8,"nodeType":"182","messageId":"183","endLine":14,"endColumn":16},{"ruleId":"180","severity":1,"message":"200","line":15,"column":8,"nodeType":"182","messageId":"183","endLine":15,"endColumn":16},{"ruleId":"180","severity":1,"message":"188","line":20,"column":8,"nodeType":"182","messageId":"183","endLine":20,"endColumn":13},{"ruleId":"180","severity":1,"message":"201","line":27,"column":11,"nodeType":"182","messageId":"183","endLine":27,"endColumn":19},{"ruleId":"180","severity":1,"message":"202","line":2,"column":31,"nodeType":"182","messageId":"183","endLine":2,"endColumn":35},{"ruleId":"180","severity":1,"message":"195","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":14,"column":8,"nodeType":"205","endLine":14,"endColumn":10,"suggestions":"206"},{"ruleId":"180","severity":1,"message":"207","line":17,"column":21,"nodeType":"182","messageId":"183","endLine":17,"endColumn":27},{"ruleId":"203","severity":1,"message":"208","line":42,"column":8,"nodeType":"205","endLine":42,"endColumn":10,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":65,"column":45,"nodeType":"212","endLine":65,"endColumn":167},{"ruleId":"210","severity":1,"message":"211","line":68,"column":45,"nodeType":"212","endLine":68,"endColumn":201},{"ruleId":"210","severity":1,"message":"211","line":83,"column":65,"nodeType":"212","endLine":83,"endColumn":187},{"ruleId":"191","severity":1,"message":"213","line":92,"column":81,"nodeType":"193","messageId":"194","endLine":92,"endColumn":83},{"ruleId":"180","severity":1,"message":"214","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":14,"column":28,"nodeType":"193","messageId":"194","endLine":14,"endColumn":30},{"ruleId":"203","severity":1,"message":"215","line":41,"column":8,"nodeType":"205","endLine":41,"endColumn":10,"suggestions":"216"},{"ruleId":"180","severity":1,"message":"202","line":2,"column":31,"nodeType":"182","messageId":"183","endLine":2,"endColumn":35},{"ruleId":"180","severity":1,"message":"217","line":2,"column":37,"nodeType":"182","messageId":"183","endLine":2,"endColumn":43},{"ruleId":"180","severity":1,"message":"218","line":2,"column":45,"nodeType":"182","messageId":"183","endLine":2,"endColumn":54},{"ruleId":"180","severity":1,"message":"195","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"207","line":10,"column":21,"nodeType":"182","messageId":"183","endLine":10,"endColumn":27},{"ruleId":"203","severity":1,"message":"219","line":33,"column":8,"nodeType":"205","endLine":33,"endColumn":10,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":73,"column":45,"nodeType":"212","endLine":73,"endColumn":138},{"ruleId":"221","severity":1,"message":"222","line":75,"column":45,"nodeType":"212","endLine":75,"endColumn":145},{"ruleId":"221","severity":1,"message":"222","line":99,"column":37,"nodeType":"212","endLine":99,"endColumn":128},{"ruleId":"221","severity":1,"message":"222","line":101,"column":37,"nodeType":"212","endLine":101,"endColumn":103},{"ruleId":"180","severity":1,"message":"185","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":14},{"ruleId":"180","severity":1,"message":"223","line":13,"column":12,"nodeType":"182","messageId":"183","endLine":13,"endColumn":27},{"ruleId":"203","severity":1,"message":"224","line":43,"column":8,"nodeType":"205","endLine":43,"endColumn":16,"suggestions":"225"},{"ruleId":"191","severity":1,"message":"192","line":59,"column":45,"nodeType":"193","messageId":"194","endLine":59,"endColumn":47},{"ruleId":"180","severity":1,"message":"226","line":5,"column":19,"nodeType":"182","messageId":"183","endLine":5,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":8,"column":46,"nodeType":"182","messageId":"229","endLine":8,"endColumn":54},{"ruleId":"203","severity":1,"message":"230","line":8,"column":56,"nodeType":"182","endLine":8,"endColumn":60},{"ruleId":"180","severity":1,"message":"231","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":12},{"ruleId":"180","severity":1,"message":"232","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":18},{"ruleId":"180","severity":1,"message":"233","line":36,"column":9,"nodeType":"182","messageId":"183","endLine":36,"endColumn":17},{"ruleId":"191","severity":1,"message":"192","line":37,"column":28,"nodeType":"193","messageId":"194","endLine":37,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":40,"column":28,"nodeType":"193","messageId":"194","endLine":40,"endColumn":30},{"ruleId":"191","severity":1,"message":"192","line":43,"column":28,"nodeType":"193","messageId":"194","endLine":43,"endColumn":30},{"ruleId":"210","severity":1,"message":"211","line":58,"column":29,"nodeType":"212","endLine":58,"endColumn":137},{"ruleId":"180","severity":1,"message":"181","line":1,"column":9,"nodeType":"182","messageId":"183","endLine":1,"endColumn":18},{"ruleId":"180","severity":1,"message":"188","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":13},{"ruleId":"180","severity":1,"message":"195","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"234","line":12,"column":12,"nodeType":"182","messageId":"183","endLine":12,"endColumn":17},{"ruleId":"180","severity":1,"message":"235","line":12,"column":19,"nodeType":"182","messageId":"183","endLine":12,"endColumn":27},{"ruleId":"180","severity":1,"message":"236","line":14,"column":12,"nodeType":"182","messageId":"183","endLine":14,"endColumn":20},{"ruleId":"180","severity":1,"message":"237","line":14,"column":22,"nodeType":"182","messageId":"183","endLine":14,"endColumn":33},{"ruleId":"180","severity":1,"message":"238","line":15,"column":12,"nodeType":"182","messageId":"183","endLine":15,"endColumn":24},{"ruleId":"180","severity":1,"message":"239","line":15,"column":26,"nodeType":"182","messageId":"183","endLine":15,"endColumn":40},{"ruleId":"210","severity":1,"message":"211","line":33,"column":37,"nodeType":"212","endLine":33,"endColumn":117},{"ruleId":"240","severity":1,"message":"241","line":37,"column":41,"nodeType":"212","endLine":37,"endColumn":88},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'NavBar' is defined but never used.","'Test' is defined but never used.","'setQuickSearch' is assigned a value but never used.","'axios' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Navigate' is defined but never used.","'dog1' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'quickCat' is defined but never used.","'quickDog' is defined but never used.","'navigate' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["242"],"'locale' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'animal', 'props.token', and 'token'. Either include them or remove the dependency array.",["243"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'ChatBar' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array. If 'token' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["244"],"'useRef' is defined but never used.","'createRef' is defined but never used.","React Hook useEffect has missing dependencies: 'animal' and 'token'. Either include them or remove the dependency array.",["245"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'messageReceived' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socketId'. Either include it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["246"],"'setUsers' is assigned a value but never used.","no-const-assign","'setUsers' is constant.","const","Assignments to the 'setUsers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'logo' is defined but never used.","'logoD8D8E7' is defined but never used.","'scroller' is assigned a value but never used.","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'distance' is assigned a value but never used.","'setdistance' is assigned a value but never used.","'searchErrors' is assigned a value but never used.","'setSearcErrors' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [props]",{"range":"257","text":"258"},"Update the dependencies array to be: [animal, props.token, token]",{"range":"259","text":"260"},"Update the dependencies array to be: [token]",{"range":"261","text":"262"},"Update the dependencies array to be: [animal, token]",{"range":"263","text":"264"},"Update the dependencies array to be: [socketId]",{"range":"265","text":"266"},[397,399],"[props]",[1279,1281],"[animal, props.token, token]",[1398,1400],"[token]",[1112,1114],"[animal, token]",[1382,1390],"[socketId]"]
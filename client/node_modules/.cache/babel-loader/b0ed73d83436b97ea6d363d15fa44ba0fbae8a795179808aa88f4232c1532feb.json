{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport NavBar from '../components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:8000\");\nconst Chat = () => {\n  _s();\n  // ========================== States ========================== //\n  // Room state\n  const [room, setRoom] = useState('');\n  // Message States\n  const [message, setMessage] = useState('');\n  const [messageReceived, setMessageReceived] = useState([]);\n  const [allMessages, setAllMessages] = useState([]);\n  const [socketId, setSocketId] = useState('');\n\n  // ========================== Listeners/Emiters ========================== //\n\n  // Join a room method using data (emiter)\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  // Send message (emiter)\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      room\n    });\n  };\n\n  // When socket is updated, listen for data emitted from the backend (listener)\n  useEffect(() => {\n    console.log(\"UseEffect\");\n    socket.on(\"receive_message\", data => {\n      if (!socketId) {\n        setSocketId(data.socketId);\n      }\n      setMessageReceived(data);\n      setAllMessages(messageReceived => {\n        return [...messageReceived, data];\n      });\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Room Number\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \" Join Room \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setMessage(event.target.value),\n        placeholder: \"message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          sendMessage();\n        },\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: \"scroll\",\n        width: \"50%\",\n        height: \"250px\",\n        backgroundColor: \"rgba(0,0,255,.1)\"\n      },\n      children: allMessages.map((index, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: index.socketId == socketId ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\" right: \", index.message, \" \", index.timeStamp, \" \"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\" left: \", index.message, \" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\" \", index.timeStamp, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 69\n            }, this), \" \"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"BFeHUAHxYfVMeoSI1jdeY55P/Xo=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","NavBar","jsxDEV","_jsxDEV","socket","connect","Chat","_s","room","setRoom","message","setMessage","messageReceived","setMessageReceived","allMessages","setAllMessages","socketId","setSocketId","joinRoom","emit","sendMessage","console","log","on","data","children","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","overflow","width","height","backgroundColor","map","index","i","timeStamp","_c","$RefreshReg$"],"sources":["/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/views/Chat.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from 'socket.io-client'\nimport NavBar from '../components/NavBar';\nconst socket = io.connect(\"http://localhost:8000\")\n\nconst Chat = () => {\n\n    // ========================== States ========================== //\n    // Room state\n    const [room, setRoom] = useState('')\n    // Message States\n    const [message, setMessage] = useState('')\n    const [messageReceived, setMessageReceived] = useState([])\n    const [allMessages, setAllMessages] = useState([])\n    const [socketId, setSocketId] = useState('')\n\n    // ========================== Listeners/Emiters ========================== //\n\n    // Join a room method using data (emiter)\n    const joinRoom = () => {\n        if (room !== \"\") {\n            socket.emit(\"join_room\", room);\n        }\n    };\n\n    // Send message (emiter)\n    const sendMessage = () => {\n        socket.emit(\"send_message\", { message, room })\n    };\n\n    // When socket is updated, listen for data emitted from the backend (listener)\n    useEffect(() => {\n        console.log(\"UseEffect\")\n        socket.on(\"receive_message\", (data) => {\n            if (!socketId) {\n                setSocketId(data.socketId)\n            }\n            setMessageReceived(data);\n            setAllMessages(messageReceived => {\n                return [...messageReceived, data]\n            })\n        });\n    }, [socket]);\n\n    return (\n        <div>\n            <div>\n                <input placeholder='Room Number' onChange={(event) => { setRoom(event.target.value) }} />\n                <button onClick={joinRoom}> Join Room </button>\n            </div>\n            <div>\n                <input onChange={(event) => setMessage(event.target.value)} placeholder=\"message...\" />\n                <button onClick={() => { sendMessage() }}>Send Message</button>\n            </div>\n            <div style={{ overflow: \"scroll\", width: \"50%\", height: \"250px\", backgroundColor: \"rgba(0,0,255,.1)\" }}>\n                {allMessages.map((index, i) => {\n                    return (\n                        <div>\n                            {index.socketId == socketId\n                                ?\n                                <h5 key={i} > right: {index.message} {index.timeStamp} </h5>\n                                :\n                                <h5 key={i} > left: {index.message} <h6> {index.timeStamp} </h6> </h5>\n                            }\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
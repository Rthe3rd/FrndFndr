{"ast":null,"code":"var _jsxFileName = \"/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport ChatBar from './ChatBar';\nimport ChatBody from \"./ChatBody\";\nimport ChatFooter from \"./ChatFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = _ref => {\n  _s();\n  let {\n    socket\n  } = _ref;\n  const [messages, setMessage] = useState([]);\n  const [typingStatus, setTypingStatus] = useState('');\n  const lastMessageRef = useRef(null);\n  useEffect(() => {\n    socket.on('messageResponse', data => setMessage([...messages, data]));\n  }, [socket, messages]);\n  useEffect(() => {\n    socket.on(\"typingResponse\", data => setTypingStatus(data));\n  }, [socket]);\n  useEffect(() => {\n    var _lastMessageRef$curre;\n    (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__main\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBody, {\n        messages: messages,\n        typingStatus: typingStatus,\n        lastMessageRef: lastMessageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"CZhzNlHRzsdWTIe+U+yceYOO1GU=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ChatBar","ChatBody","ChatFooter","jsxDEV","_jsxDEV","ChatPage","_ref","_s","socket","messages","setMessage","typingStatus","setTypingStatus","lastMessageRef","on","data","_lastMessageRef$curre","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Alex/Documents/Coding_Dojo/MERN/FrndFndr/client/src/components/ChatPage.jsx"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState, useRef } from 'react'\nimport ChatBar from './ChatBar'\nimport ChatBody from \"./ChatBody\"\nimport ChatFooter from \"./ChatFooter\"\n\nconst ChatPage = ({ socket }) => {\n\n    const [messages, setMessage] = useState([])\n    const [typingStatus, setTypingStatus] = useState('')\n    const lastMessageRef = useRef(null)\n\n    useEffect(() => {\n        socket.on('messageResponse', data => setMessage([...messages, data]))\n    }, [socket, messages]);\n\n    useEffect(() => {\n        socket.on(\"typingResponse\", data => setTypingStatus(data))\n    }, [socket])\n\n    useEffect(() => {\n        lastMessageRef.current?.scrollIntoView({behavior:'smooth'})\n    }, [messages])\n\n    return (\n        <div className = \"chat\">\n            {/* <ChatBar socket = {socket}/> */}\n            <div className = \"chat__main\">\n                <ChatBody messages = {messages} typingStatus = {typingStatus} lastMessageRef = {lastMessageRef}/>\n                <ChatFooter socket = {socket}/>\n            </div>\n        </div>\n        )\n    }\n\nexport default ChatPage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,QAAQ,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAExB,MAAM,CAACG,QAAQ,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMe,cAAc,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEnCF,SAAS,CAAC,MAAM;IACZW,MAAM,CAACM,EAAE,CAAC,iBAAiB,EAAEC,IAAI,IAAIL,UAAU,CAAC,CAAC,GAAGD,QAAQ,EAAEM,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,EAAE,CAACP,MAAM,EAAEC,QAAQ,CAAC,CAAC;EAEtBZ,SAAS,CAAC,MAAM;IACZW,MAAM,CAACM,EAAE,CAAC,gBAAgB,EAAEC,IAAI,IAAIH,eAAe,CAACG,IAAI,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZX,SAAS,CAAC,MAAM;IAAA,IAAAmB,qBAAA;IACZ,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAACC,QAAQ,EAAC;IAAQ,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACIL,OAAA;IAAKgB,SAAS,EAAG,MAAM;IAAAC,QAAA,eAEnBjB,OAAA;MAAKgB,SAAS,EAAG,YAAY;MAAAC,QAAA,gBACzBjB,OAAA,CAACH,QAAQ;QAACQ,QAAQ,EAAIA,QAAS;QAACE,YAAY,EAAIA,YAAa;QAACE,cAAc,EAAIA;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjGrB,OAAA,CAACF,UAAU;QAACM,MAAM,EAAIA;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA3BCF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}